name: Terraform Deploy

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1
      TF_VAR_project_name: order-system-${{ github.run_id }} # unique per run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: AWS Cleanup (force delete old resources)
        run: |
          set -e
          echo "Full cleanup of old IAM role and S3 bucket..."

          export AWS_DEFAULT_REGION=eu-north-1
          export AWS_REGION=eu-north-1

          # Detach all IAM policies
          if aws iam get-role --role-name order-system-lambda-role 2>/dev/null; then
            echo "Detaching IAM policies..."
            aws iam list-attached-role-policies --role-name order-system-lambda-role \
              --query 'AttachedPolicies[*].PolicyArn' --output text | \
              xargs -n1 -r aws iam detach-role-policy --role-name order-system-lambda-role --policy-arn
            aws iam delete-role --role-name order-system-lambda-role --no-cli-pager || true
          fi

          # Empty and remove S3 bucket
          if aws s3 ls "s3://order-system-logs" 2>/dev/null; then
            echo "Emptying and deleting S3 bucket..."
            aws s3 rm "s3://order-system-logs" --recursive || true
            aws s3 rb "s3://order-system-logs" --force || true
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-north-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
