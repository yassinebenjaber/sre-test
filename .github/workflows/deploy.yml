name: Terraform Deploy

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Ensure Terraform state bucket exists
        run: |
          BUCKET_NAME="order-system-terraform-state"
          REGION="eu-north-1"

          echo "Checking if S3 bucket $BUCKET_NAME exists..."
          if aws s3api head-bucket --bucket "$BUCKET_NAME" --region "$REGION" >/dev/null 2>&1; then
            echo "Bucket already exists."
          else
            echo "Creating S3 bucket $BUCKET_NAME..."
            aws s3api create-bucket \
              --bucket "$BUCKET_NAME" \
              --region "$REGION" \
              --create-bucket-configuration LocationConstraint="$REGION"
            aws s3api put-bucket-versioning \
              --bucket "$BUCKET_NAME" \
              --versioning-configuration Status=Enabled \
              --region "$REGION"
            echo "Bucket $BUCKET_NAME created and versioning enabled."
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-north-1

      - name: Build Lambda packages
        run: |
          echo "Zipping Lambda functions..."
          mkdir -p lambda
          cd lambda/add_order && zip -r ../add_order.zip ./* && cd ../..
          cd lambda/process_order && zip -r ../process_order.zip ./* && cd ../..
          ls -l lambda/

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -var="suffix=${{ github.run_id }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false -var="suffix=${{ github.run_id }}"
